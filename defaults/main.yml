# roles/event_agent/defaults/main.yml
---
openio_event_agent_namespace: "{{ namespace | default('OPENIO') }}"
openio_event_agent_serviceid: "{{ 0 + openio_legacy_serviceid | d(0) | int }}"

openio_event_agent_gridinit_dir: "/etc/gridinit.d/{{ openio_event_agent_namespace }}"
openio_event_agent_gridinit_file_prefix: ""

openio_event_agent_workers: "{{ ansible_processor_vcpus / 2 | int }}"
openio_event_agent_concurrency: ""

openio_event_agent_delete_workers: "1"
openio_event_agent_delete_concurrency: "1"

openio_event_agent_queue_url: "beanstalk://{{ openio_bind_address | d(ansible_default_ipv4.address) }}:6014"
openio_event_agent_tube: oio

openio_event_agent_provision_only: false
openio_event_agent_package_upgrade: "{{ openio_package_upgrade | d(false) }}"
openio_event_agent_location: "{{ ansible_hostname }}.{{ openio_event_agent_serviceid }}"

openio_event_agent_tube_delete_enabled: true

openio_event_agent_replicator_enabled: false

# pipelines
openio_event_agent_storage_content_new_pipeline: "{{ [] if not openio_event_agent_replicator_enabled \
  else ['replication'] }}"

openio_event_agent_storage_content_append_pipeline: "{{ [] if not openio_event_agent_replicator_enabled \
  else ['replication'] }}"

openio_event_agent_storage_content_broken_pipeline:
  - content_rebuild

openio_event_agent_storage_content_update_pipeline: "{{ [] if not openio_event_agent_replicator_enabled else \
  ['replication'] }}"

openio_event_agent_storage_content_drained_pipeline: "{{ [] if not openio_event_agent_replicator_enabled else \
  ['replication'] }}"

openio_event_agent_storage_content_deleted_pipeline: "{{ ['content_cleaner'] \
  if not openio_event_agent_replicator_enabled \
  else ['replication','content_cleaner'] }}"

openio_event_agent_storage_content_notify_delete_pipeline: "{{ ['notify_delete'] \
  if not openio_event_agent_replicator_enabled \
  else ['replication','notify_delete'] }}"

openio_event_agent_storage_container_new_pipeline: "{{ ['account_update', 'volume_index'] \
  if not openio_event_agent_replicator_enabled \
  else ['replication','account_update', 'volume_index'] }}"

openio_event_agent_storage_container_deleted_pipeline: "{{ ['account_update', 'volume_index'] \
  if not openio_event_agent_replicator_enabled \
  else ['replication','account_update', 'volume_index'] }}"

openio_event_agent_storage_container_update_pipeline: "{{ [] if not openio_event_agent_replicator_enabled \
  else ['replication'] }}"

openio_event_agent_storage_container_state_pipeline:
  - account_update

openio_event_agent_storage_chunk_new_pipeline:
  - volume_index

openio_event_agent_storage_chunk_deleted_pipeline:
  - volume_index

openio_event_agent_account_service_pipeline:
  - account_update
  - volume_index

openio_event_agent_storage_content_perfectible_pipeline:
  - content_improve

## filters
openio_event_agent_filter_noop:
  use: "egg:oio#noop"

openio_event_agent_filter_logger:
  use: "egg:oio#logger"

openio_event_agent_filter_volume_index:
  use: "egg:oio#volume_index"

openio_event_agent_filter_account_update:
  use: "egg:oio#account_update"

openio_event_agent_filter_content_rebuild:
  use: "egg:oio#notify"
  tube: "oio-rebuild"
  queue_url: "{{ openio_event_agent_queue_url }}"

openio_event_agent_filter_content_cleaner:
  use: "egg:oio#content_cleaner"

openio_event_agent_filter_quarantine:
  use: "egg:oio#notify"
  tube: "vrc-quarantine"
  queue_url: "{{ openio_event_agent_queue_url }}"

openio_event_agent_filter_replication:
  use: "egg:oio#notify"
  tube: "oio-repli"
  queue_url: "{{ openio_event_agent_queue_url }}"

openio_event_agent_filter_content_improve:
  use: "egg:oio#notify"
  tube: "oio-improve"
  queue_url: "{{ openio_event_agent_queue_url }}"

openio_event_agent_filter_notify_delete:
  use: "egg:oio#notify"
  tube: "oio-delete"
  queue_url: "{{ openio_event_agent_queue_url }}"

openio_event_agent_filter_wildcard: {}
#  indexing:
#    use: "egg:oio#webhook"
#    endpoint: "http://localhost:8000/api/core/v1/namespaces/default/services/indexing/proxy/invoke"

...
